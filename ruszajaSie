import sys
from PyQt5.QtWidgets import QApplication, QGraphicsView, QGraphicsScene, QGraphicsRectItem, QGraphicsItem
from PyQt5.QtSvg import QGraphicsSvgItem
from PyQt5.QtGui import QBrush, QColor
from PyQt5.QtCore import Qt, QPointF

class ChessPiece(QGraphicsSvgItem):
    def __init__(self, image_path, x, y, parent=None):
        super(ChessPiece, self).__init__(image_path, parent)
        self.setPos(x * 80, y * 80)
        self.setScale(1.8)  # Adjust scale to fit the board
        self.setFlag(QGraphicsItem.ItemIsMovable)  # Allow the item to be movable

class Pawn(ChessPiece):
    def __init__(self, image_path, x, y, color='black', parent=None):
        super(Pawn, self).__init__(image_path, x, y, parent)
        self.color = color

    # mouseReleaseEvent needs to be implemented with chess logic for pawns

class Rook(ChessPiece):
    # Initialize similarly to Pawn and implement specific chess logic for rooks
    pass

class Knight(ChessPiece):
    # Initialize similarly to Pawn and implement specific chess logic for knights
    pass

# Repeat for Bishop, Queen, King, etc.


class ChessBoard(QGraphicsView):
    def __init__(self):
        super(ChessBoard, self).__init__()
        self.scene = QGraphicsScene(self)
        self.setScene(self.scene)
        self.setSceneRect(0, 0, 640, 640)
        self.drawBoard()
        self.addPieces()

    def drawBoard(self):
        light_color = QColor(173, 216, 230)  # Light blue
        dark_color = QColor(0, 0, 139)       # Dark blue
        for i in range(8):
            for j in range(8):
                rect = QGraphicsRectItem(80 * j, 80 * i, 80, 80)
                rect.setBrush(QBrush(light_color if (i + j) % 2 == 0 else dark_color))
                self.scene.addItem(rect)

    def addPieces(self):
        # Add black and white pawns
        for i in range(8):
            pawn_black = Pawn("bpawn.svg", i, 1, 'black')
            self.scene.addItem(pawn_black)  # Add to the scene, not as a parent

            pawn_white = Pawn("wpawn.svg", i, 6, 'white')
            self.scene.addItem(pawn_white)  # Add to the scene, not as a parent


if __name__ == '__main__':
    app = QApplication(sys.argv)
    board = ChessBoard()
    board.show()
    sys.exit(app.exec_())
